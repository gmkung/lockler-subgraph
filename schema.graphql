type Lockler @entity(immutable: false) {
  id: ID!
  safe: Safe!
  realityModules: [RealityModule!]! @derivedFrom(field: "lockler")
  threshold: BigInt!
  transactionCount: BigInt!
  creator: Bytes!
  owners: [Bytes!]!
  createdAt: BigInt!
  createdAtBlock: BigInt!
}

type Safe @entity(immutable: false) {
  id: ID! # Safe address
  owners: [Bytes!]!
  threshold: BigInt!
  modules: [Bytes!]!
  nonce: BigInt! # Current nonce
  domainSeparator: Bytes! # EIP-712 domain separator
  signedMessages: [Bytes!]! # Array of signed message hashes
  transactions: [SafeTransaction!]! @derivedFrom(field: "safe")
  createdAt: BigInt!
  createdAtBlock: BigInt!
}

type SafeTransaction @entity(immutable: true) {
  id: ID! # Transaction hash
  safe: Safe!
  to: Bytes!
  value: BigInt!
  data: Bytes!
  operation: Int!
  safeTxGas: BigInt!
  baseGas: BigInt!
  gasPrice: BigInt!
  gasToken: Bytes!
  refundReceiver: Bytes!
  signatures: Bytes!
  nonce: BigInt!
  executedAt: BigInt
  executedAtBlock: BigInt
  success: Boolean
}

type RealityModule @entity(immutable: false) {
  id: ID!
  lockler: Lockler!
  owner: Bytes!
  avatar: Bytes!
  target: Bytes!
  questionText: String
  createdAt: BigInt!
  createdAtBlock: BigInt!
} 